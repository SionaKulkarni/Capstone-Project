{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../core/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateProductComponent_div_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Product name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_7_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Name must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateProductComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UpdateProductComponent_div_7_small_1_Template, 2, 0, \"small\", 3);\n    i0.ɵɵtemplate(2, UpdateProductComponent_div_7_small_2_Template, 2, 0, \"small\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.updateProductForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction UpdateProductComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\");\n    i0.ɵɵtext(2, \"Description is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateProductComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\");\n    i0.ɵɵtext(2, \"Manufacturer is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateProductComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\");\n    i0.ɵɵtext(2, \"Price is required.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"small\");\n    i0.ɵɵtext(4, \"Price cannot be negative.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateProductComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\");\n    i0.ɵɵtext(2, \"Quantity is required.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"small\");\n    i0.ɵɵtext(4, \"Quantity must be at least 1.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class UpdateProductComponent {\n  constructor(route, dataService, fb, router) {\n    this.route = route;\n    this.dataService = dataService;\n    this.fb = fb;\n    this.router = router;\n    this.productId = null;\n    this.updateProductForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      quantity: [1, [Validators.required, Validators.min(1)]]\n    });\n  }\n  ngOnInit() {\n    // Get product ID from route params\n    this.productId = Number(this.route.snapshot.paramMap.get('id'));\n    if (this.productId) {\n      // Load product data from service\n      console.log(this.productId, typeof this.productId);\n      this.dataService.getProductById(this.productId).subscribe(product => {\n        if (product) {\n          // Populate the form with product data\n          this.updateProductForm.patchValue(product);\n        } else {\n          alert('Product not found.');\n          this.router.navigate(['/inventory']);\n        }\n      }, error => {\n        console.error('Error loading product:', error);\n        alert('An error occurred while loading the product.');\n        this.router.navigate(['/inventory']);\n      });\n    }\n  }\n  onUpdate() {\n    if (this.updateProductForm.valid && this.productId !== null) {\n      // Update product data\n      const updatedProduct = {\n        id: this.productId,\n        ...this.updateProductForm.value\n      };\n      this.dataService.updateProduct(updatedProduct).subscribe(() => {\n        alert('Product updated successfully!');\n        this.router.navigate(['/inventory']);\n      }, error => {\n        console.error('Error updating product:', error);\n        alert('An error occurred while updating the product.');\n      });\n    } else {\n      alert('Please correct the errors in the form.');\n    }\n  }\n}\nUpdateProductComponent.ɵfac = function UpdateProductComponent_Factory(t) {\n  return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n};\nUpdateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductComponent,\n  selectors: [[\"app-update-product\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[1, \"container\"], [1, \"product-form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"description\"], [\"type\", \"text\", \"formControlName\", \"manufacturer\"], [\"type\", \"number\", \"formControlName\", \"price\"], [\"type\", \"number\", \"formControlName\", \"quantity\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function UpdateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onUpdate();\n      });\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Update Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵtemplate(7, UpdateProductComponent_div_7_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵtemplate(11, UpdateProductComponent_div_11_Template, 3, 0, \"div\", 3);\n      i0.ɵɵelementStart(12, \"label\");\n      i0.ɵɵtext(13, \"Manufacturer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵtemplate(15, UpdateProductComponent_div_15_Template, 3, 0, \"div\", 3);\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 6);\n      i0.ɵɵtemplate(19, UpdateProductComponent_div_19_Template, 5, 0, \"div\", 3);\n      i0.ɵɵelementStart(20, \"label\");\n      i0.ɵɵtext(21, \"Quantity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 7);\n      i0.ɵɵtemplate(23, UpdateProductComponent_div_23_Template, 5, 0, \"div\", 3);\n      i0.ɵɵelementStart(24, \"button\", 8);\n      i0.ɵɵtext(25, \"Update Product\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateProductForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.updateProductForm.get(\"description\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.updateProductForm.get(\"description\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.updateProductForm.get(\"manufacturer\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.updateProductForm.get(\"quantity\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.updateProductForm.get(\"quantity\")) == null ? null : tmp_5_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.updateProductForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    font-family: Arial, sans-serif;\\r\\n    background-color: #f8f9fa; \\r\\n}\\r\\n\\r\\n\\r\\n.container[_ngcontent-%COMP%] {\\r\\n    flex: 1;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%] {\\r\\n    background: white;\\r\\n    padding: 25px;\\r\\n    border-radius: 12px;\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\r\\n    width: 400px;\\r\\n}\\r\\n\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 15px;\\r\\n    font-size: 22px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    font-weight: bold;\\r\\n    margin: 8px 0 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 8px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n    font-size: 14px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    background: #28a745;\\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    font-size: 16px;\\r\\n    cursor: pointer;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\r\\n    background: #ccc;\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n\\r\\n.update-product-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover:not(:disabled) {\\r\\n    background: #218838;\\r\\n}\\r\\n\\r\\n\\r\\nfooter[_ngcontent-%COMP%] {\\r\\n    background: #333;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    padding: 10px 0;\\r\\n    font-size: 14px;\\r\\n    position: relative;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvaW52ZW50b3J5L3VwZGF0ZS1wcm9kdWN0L3VwZGF0ZS1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUJBQXVCO0FBQ3ZCO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixZQUFZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qiw4QkFBOEI7SUFDOUIseUJBQXlCLEVBQUUsMEJBQTBCO0FBQ3pEOztBQUVBLHVCQUF1QjtBQUN2QjtJQUNJLE9BQU87SUFDUCxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhO0FBQ2pCOztBQUVBLG1CQUFtQjtBQUNuQjtJQUNJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHdDQUF3QztJQUN4QyxZQUFZO0FBQ2hCOztBQUVBLFVBQVU7QUFDVjtJQUNJLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBLGlCQUFpQjtBQUNqQjtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsaUJBQWlCO0FBQ3JCOztBQUVBLGlCQUFpQjtBQUNqQjtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCOztBQUVBLGtCQUFrQjtBQUNsQjtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQSxrQkFBa0I7QUFDbEI7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsV0FBVztBQUNmIiwic291cmNlc0NvbnRlbnQiOlsiLyogRW5zdXJlIGZ1bGwgaGVpZ2h0ICovXHJcbmh0bWwsIGJvZHkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTsgLyogTGlnaHQgZ3JheSBiYWNrZ3JvdW5kICovXHJcbn1cclxuXHJcbi8qIENlbnRlcmluZyB0aGUgZm9ybSAqL1xyXG4uY29udGFpbmVyIHtcclxuICAgIGZsZXg6IDE7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLyogQ2FyZC1saWtlIGZvcm0gKi9cclxuLnVwZGF0ZS1wcm9kdWN0LWZvcm0ge1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAyNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbn1cclxuXHJcbi8qIFRpdGxlICovXHJcbi51cGRhdGUtcHJvZHVjdC1mb3JtIGgyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi8qIExhYmVsIHN0eWxlcyAqL1xyXG4udXBkYXRlLXByb2R1Y3QtZm9ybSBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luOiA4cHggMCA1cHg7XHJcbn1cclxuXHJcbi8qIElucHV0IGZpZWxkcyAqL1xyXG4udXBkYXRlLXByb2R1Y3QtZm9ybSBpbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4vKiBCdXR0b24gc3R5bGVzICovXHJcbi51cGRhdGUtcHJvZHVjdC1mb3JtIGJ1dHRvbiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjhhNzQ1O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogMC4zcztcclxufVxyXG5cclxuLnVwZGF0ZS1wcm9kdWN0LWZvcm0gYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQ6ICNjY2M7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG59XHJcblxyXG4udXBkYXRlLXByb2R1Y3QtZm9ybSBidXR0b246aG92ZXI6bm90KDpkaXNhYmxlZCkge1xyXG4gICAgYmFja2dyb3VuZDogIzIxODgzODtcclxufVxyXG5cclxuLyogRm9vdGVyIHN0eWxlcyAqL1xyXG5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZDogIzMzMztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","UpdateProductComponent","constructor","route","dataService","fb","router","updateProductForm","group","name","required","minLength","description","manufacturer","price","min","quantity","ngOnInit","productId","Number","snapshot","paramMap","get","console","log","getProductById","subscribe","product","patchValue","alert","navigate","error","onUpdate","valid","updatedProduct","id","value","updateProduct","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\CapStone Project\\Product-Inventory-Management\\src\\app\\features\\inventory\\update-product\\update-product.component.ts","D:\\CapStone Project\\Product-Inventory-Management\\src\\app\\features\\inventory\\update-product\\update-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../../../core/data.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent implements OnInit {\n  updateProductForm: FormGroup;\n  productId: number | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {\n    this.updateProductForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      description: ['', Validators.required],\n      manufacturer: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      quantity: [1, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  ngOnInit(): void {\n    // Get product ID from route params\n    this.productId = Number(this.route.snapshot.paramMap.get('id'));\n\n    if (this.productId) {\n      // Load product data from service\n      console.log(this.productId, typeof this.productId);\n      \n      this.dataService.getProductById(this.productId).subscribe(\n        (product) => {\n          if (product) {\n            // Populate the form with product data\n            this.updateProductForm.patchValue(product);\n          } else {\n            alert('Product not found.');\n            this.router.navigate(['/inventory']);\n          }\n        },\n        (error) => {\n          console.error('Error loading product:', error);\n          alert('An error occurred while loading the product.');\n          this.router.navigate(['/inventory']);\n        }\n      );\n    }\n  }\n\n  onUpdate(): void {\n    if (this.updateProductForm.valid && this.productId !== null) {\n      // Update product data\n      const updatedProduct = { id: this.productId, ...this.updateProductForm.value };\n      this.dataService.updateProduct(updatedProduct).subscribe(\n        () => {\n          alert('Product updated successfully!');\n          this.router.navigate(['/inventory']);\n        },\n        (error) => {\n          console.error('Error updating product:', error);\n          alert('An error occurred while updating the product.');\n        }\n      );\n    } else {\n      alert('Please correct the errors in the form.');\n    }\n  }\n}\n","<div class=\"container\">\n    <form class=\"product-form\" [formGroup]=\"updateProductForm\" (ngSubmit)=\"onUpdate()\">\n        <h2>Update Product</h2>\n        \n        <label>Name:</label>\n        <input type=\"text\" formControlName=\"name\" />\n        <div *ngIf=\"updateProductForm.get('name')?.invalid && updateProductForm.get('name')?.touched\">\n            <small *ngIf=\"updateProductForm.get('name')?.errors?.['required']\">Product name is required.</small>\n            <small *ngIf=\"updateProductForm.get('name')?.errors?.['minlength']\">Name must be at least 3 characters long.</small>\n        </div>\n\n        <label>Description:</label>\n        <input type=\"text\" formControlName=\"description\" />\n        <div *ngIf=\"updateProductForm.get('description')?.invalid && updateProductForm.get('description')?.touched\">\n            <small>Description is required.</small>\n        </div>\n\n        <label>Manufacturer:</label>\n        <input type=\"text\" formControlName=\"manufacturer\" />\n        <div *ngIf=\"updateProductForm.get('manufacturer')?.invalid && updateProductForm.get('manufacturer')?.touched\">\n            <small>Manufacturer is required.</small>\n        </div>\n\n        <label>Price:</label>\n        <input type=\"number\" formControlName=\"price\" />\n        <div *ngIf=\"updateProductForm.get('price')?.invalid && updateProductForm.get('price')?.touched\">\n            <small>Price is required.</small>\n            <small>Price cannot be negative.</small>\n        </div>\n\n        <label>Quantity:</label>\n        <input type=\"number\" formControlName=\"quantity\" />\n        <div *ngIf=\"updateProductForm.get('quantity')?.invalid && updateProductForm.get('quantity')?.touched\">\n            <small>Quantity is required.</small>\n            <small>Quantity must be at least 1.</small>\n        </div>\n\n        <button type=\"submit\" [disabled]=\"updateProductForm.invalid\">Update Product</button>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}